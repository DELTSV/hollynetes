name: CD
on:
  push:
    branches: [ main ]

jobs:
  deploy-frontend:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./packages/frontend
        run: npm i

      - name: Build
        working-directory: ./packages/frontend
        run: npm run build

      - name: Check lint
        working-directory: ./packages/frontend
        run: npm run lint

      - name: Deploy - remove old version
        run: rm -rf /apps/frontend/*

      - name: Deploy - copy sources
        working-directory: ./packages/frontend
        run: cp -r dist/frontend/* /apps/frontend

      - name: Deploy - copy .htaccess
        run: cp .htaccess /apps/frontend

  deploy-backend:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./packages/backend
        run: npm i

      - name: Build
        working-directory: ./packages/backend
        run: npm run build

      - name: Check lint
        working-directory: ./packages/backend
        run: npm run lint

      - name: Deploy - remove old version
        run: find /apps/backend -mindepth 1 ! -regex '^/apps/backend/node_modules\(/.*\)?' -delete

      - name: Deploy - copy sources
        working-directory: ./packages/backend
        run: cp -r dist/* /apps/backend

      - name: Deploy - copy package.json
        working-directory: ./packages/backend
        run: cp package.json /apps/backend

      - name: Deploy - Install dependencies
        working-directory: /apps/backend
        run: npm i --omit=dev

      - name: Deploy - Restart server
        working-directory: /apps
        run: pm2 restart hollyfilms.ecosystem.config.js
